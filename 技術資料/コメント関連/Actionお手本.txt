package com.internousdevwork.mackeypark.action;
import java.util.ArrayList;
import java.util.Map;
import org.apache.struts2.interceptor.SessionAware;
import com.internousdevwork.mackeypark.dao.AdminGoodsListDAO;
import com.internousdevwork.mackeypark.dto.AdminGoodsDTO;
import com.opensymphony.xwork2.ActionSupport;

/**
 * 商品リストを作成するアクションクラス
 * @author SHIZUKA IMANISHI
 * @version 1.0
 * @since 1.0
 */
public class AdminGoodsListAction extends ActionSupport implements SessionAware{

    /**
	 * 生成されたシリアルナンバー
	 */
	private static final long serialVersionUID = 8852188228626953751L;

	/**
     * セッション
     */
    private Map<String,Object>session;

    /**
     * 商品リスト
     */
    private ArrayList<AdminGoodsDTO> adminItemList;

    /**
     * 商品10個が格納されたリストのリスト
     */
    private ArrayList<ArrayList<AdminGoodsDTO>> adminItemListList;

    /**
     * ページリスト
     */
    private ArrayList<Integer> pageList;

    /**
     * 現在ページ
     */
    private int page=1;

    /**
     * 検索する商品名
     */
    private String searchItem;

    /**
     * 検索成功の可否
     */
    private boolean result;

    /**
     * 検索結果無し
     */
    private String noResult="";

    /**
     * parkデータベースのitemテーブルからデータを取得するメソッド
     * @return SUCCESS/ERROR データベースの接続に成功した場合はSUCCESS、失敗した場合はERRORを返します。
     */
    public String execute(){
        AdminGoodsListDAO listDao = new AdminGoodsListDAO();
        if(searchItem==null || searchItem.length()==0){
            result = listDao.itemList();
        }else{
            result = listDao.searchItem(searchItem);
        }
        if(!result){
            return ERROR;
        }
        adminItemListList = listDao.getItemListList();
        pageList = listDao.getPageList();
        if(adminItemListList.isEmpty()){
            noResult="指定された商品名は見つかりませんでした。";
            return SUCCESS;
        }
        adminItemList = adminItemListList.get((page-1));
        return SUCCESS;
    }

    /**
     * 現在ページを取得するメソッド
     * @return page 現在ページ
     */
    public int getPage() {
        return page;
    }

    /**
     * 現在ページを格納するメソッド
     * @param page 現在ページ
     */
    public void setPage(int page) {
        this.page = page;
    }

    /**
     * 検索する商品名を取得するメソッド
     * @return searchItem 検索する商品名
     */
    public String getSearchItem() {
        return searchItem;
    }

    /**
     * 検索する商品名を格納するメソッド
     * @param searchItem 検索する商品名
     */
    public void setSearchItem(String searchItem) {
        this.searchItem = searchItem;
    }

    /**
     * 商品リストを取得するメソッド
     * @return adminItemList 商品リスト
     */
    public ArrayList<AdminGoodsDTO> getAdminItemList() {
        return adminItemList;
    }

    /**
     * ページリストを取得するメソッド
     * @return pageList ページリスト
     */
    public ArrayList<Integer> getPageList() {
        return pageList;
    }

    /**
     * 検索結果がない時のメッセージを取得するメソッド
     * @return noResult 検索結果がない時のメッセージ
     */
    public String getNoResult() {
        return noResult;
    }

    /**
     * セッションを取得するメソッド
     * @return session セッション
     */
    public Map<String, Object> getSession() {
        return session;
    }

    /**
     * セッションを格納するメソッド
     * @param session セッション
     */
    public void setSession(Map<String, Object> session) {
        this.session = session;
    }
    
}